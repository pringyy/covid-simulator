{"version":3,"sources":["components/BarChart.js","components/LineGraph.js","components/Data.js","components/map.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","props","data","area","type","dates","dailyCases","dailyDeaths","i","length","push","date","cases","daily","deaths","stripData","chart","series","name","reverse","options","toolbar","show","zoom","enabled","plotOptions","bar","horizontal","dataLabels","stroke","width","colors","xaxis","categories","labels","format","minHeight","maxHeight","title","text","yaxis","fill","opacity","align","tooltip","y","formatter","val","every","element","toLowerCase","height","LineGraph","cumulative","curve","Data","useState","setData","loaded","setLoaded","endpoint","useEffect","axios","get","then","res","console","log","catch","err","Grid","container","spacing","Map","setTooltipContent","areas","setAreas","data-tip","style","minZoom","maxZoom","center","geography","geographies","map","geo","onMouseEnter","properties","LAD13NM","onMouseLeave","onClick","default","outline","strokeWidth","hover","pressed","rsmKey","memo","App","content","setContent","item","xs","sm","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8c5a93b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nconst BarChart = (props) => {\r\n  const { data, area, type } = props;\r\n\r\n  const stripData = (data) => {\r\n    let dates = [],\r\n      dailyCases = [],\r\n      dailyDeaths = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      dates.push(data[i].date);\r\n\r\n      if (type === \"Cases\") {\r\n        dailyCases.push(data[i].cases.daily);\r\n      } else {\r\n        dailyDeaths.push(data[i].deaths.daily);\r\n      }\r\n    }\r\n    return [dates, dailyCases, dailyDeaths];\r\n  };\r\n\r\n  const [dates, dailyCases, dailyDeaths] = stripData(data);\r\n\r\n  const chart = {\r\n    series: [\r\n      {\r\n        name: \"Daily \" + type,\r\n        data: type === \"Cases\" ? dailyCases.reverse() : dailyDeaths.reverse(),\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n        categories: dates.reverse(),\r\n        type: \"datetime\",\r\n        labels: {\r\n          format: \"MMM yy\",\r\n          minHeight: 50,\r\n          maxHeight: 100,\r\n        },\r\n        title: {\r\n          text: \"Date\",\r\n        },\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of \" + type,\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n      title: {\r\n        text: \"Daily COVID-19 \" + type + \" in \" + area,\r\n        align: \"center\",\r\n      },\r\n\r\n      tooltip: {\r\n        y: {\r\n          formatter: (val) => {\r\n            return val + \" \" + type;\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {chart.series[0].data.every((element) => element === null) ? (\r\n        <p>\r\n          No daily data available for {type.toLowerCase()} in {area}.\r\n        </p>\r\n      ) : (\r\n        <ReactApexChart\r\n          options={chart.options}\r\n          series={chart.series}\r\n          type=\"bar\"\r\n          height={350}\r\n          width={350}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nconst LineGraph = (props) => {\r\n  const { data, area, type } = props;\r\n\r\n  const stripData = (data) => {\r\n    let dates = [],\r\n      cases = [],\r\n      deaths = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      dates.push(data[i].date);\r\n\r\n      if (type === \"Cases\") {\r\n        cases.push(data[i].cases.cumulative);\r\n      } else {\r\n        deaths.push(data[i].deaths.cumulative);\r\n      }\r\n    }\r\n    return [dates, cases, deaths];\r\n  };\r\n\r\n  const [dates, cases, deaths] = stripData(data);\r\n\r\n  const chart = {\r\n    series: [\r\n      {\r\n        name: \"Cumulative \" + type,\r\n        data: type === \"Cases\" ? cases.reverse() : deaths.reverse(),\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"line\",\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: \"smooth\",\r\n      },\r\n      xaxis: {\r\n        categories: dates.reverse(),\r\n        type: \"datetime\",\r\n        labels: {\r\n          format: \"MMM yy\",\r\n          minHeight: 50,\r\n          maxHeight: 100,\r\n        },\r\n        title: {\r\n          text: \"Date\",\r\n        },\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of \" + type,\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n      title: {\r\n        text: \"Cumulative COVID-19 \" + type + \" in \" + area,\r\n        align: \"center\",\r\n      },\r\n\r\n      tooltip: {\r\n        y: {\r\n          formatter: (val) => {\r\n            return val + \" \" + type;\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {chart.series[0].data.every((element) => element === null) ? (\r\n        <p>\r\n          No cumulative data available for {type.toLowerCase()} in {area}.\r\n        </p>\r\n      ) : (\r\n        <ReactApexChart\r\n          options={chart.options}\r\n          series={chart.series}\r\n          type=\"line\"\r\n          height={350}\r\n          width={700}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BarChart from \"./BarChart\";\r\nimport LineGraph from \"./LineGraph\";\r\n\r\nconst Data = (props) => {\r\n  const { area } = props;\r\n\r\n  const [data, setData] = useState({});\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const endpoint =\r\n    \"https://api.coronavirus.data.gov.uk/v1/data?\" +\r\n    `filters=areaType=ltla;areaName=${area}&` +\r\n    'structure={\"date\":\"date\",\"name\":\"areaName\",\"code\":\"areaCode\",\"cases\":{\"daily\":\"newCasesBySpecimenDate\",\"cumulative\":\"cumCasesBySpecimenDateRate\"},\"deaths\":{\"daily\":\"newDeathsByDeathDate\",\"cumulative\":\"cumDeathsByDeathDate\"},\"covidOccupiedMVBeds\":\"covidOccupiedMVBeds\"}';\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(endpoint)\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        setData(res.data.data);\r\n        setLoaded(true);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loaded ? (\r\n        <Grid container spacing={1}>\r\n          <BarChart data={data} area={area} type=\"Cases\" />\r\n          <LineGraph data={data} area={area} type=\"Cases\" />\r\n\r\n          <BarChart data={data} area={area} type=\"Deaths\" />\r\n          <LineGraph data={data} area={area} type=\"Deaths\" />\r\n\r\n          {/* <PieChart data={data} area={area} /> */}\r\n        </Grid>\r\n      ) : (\r\n        <p>loading...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n","import {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/martinjc/UK-GeoJSON/master/json/administrative/gb/topo_lad.json\";\r\n\r\nconst Map = ({ setTooltipContent, areas, setAreas }) => {\r\n  return (\r\n    <>\r\n      <ComposableMap\r\n        data-tip=\"Select County\"\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n      >\r\n        <ZoomableGroup zoom={30} minZoom={30} maxZoom={100} center={[-2, 55]}>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    setTooltipContent(geo.properties.LAD13NM);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  onClick={() => {\r\n                    setAreas([...areas, geo.properties.LAD13NM]);\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"29a19c\",\r\n                      outline: \"none\",\r\n                      strokeWidth: 0.01,\r\n                      stroke: \"#27323a\",\r\n                    },\r\n                    hover: {\r\n                      fill: \"a3f7bf\",\r\n                      outline: \"none\",\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#FFF\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Map);\r\n","import \"./styles.css\";\r\n\r\nimport Data from \"./components/Data\";\r\nimport Map from \"./components/map\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst App = () => {\r\n  const [areas, setAreas] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        style={{\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Map\r\n          setTooltipContent={setContent}\r\n          setAreas={(area) => setAreas(area)}\r\n          areas={areas}\r\n        />\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6}>\r\n        {areas.map((area) => (\r\n          <Data area={area} />\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import \"./styles.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}